
;
IS_KR:
	CMP	BYTE [FLG.K],0FFH
	RET


;
;	abstract
;
;	>ESI node '__'
;	>EDI type
;

A_DEF:
	MOV	AX,WD('_','_')
	CALL	MAKE_WORD1
	MOV	[NODE_A_DEF],EBX
	PUSH	EBX

	PUSH	DWORD [FLG.A_DEF]
	MOV	BYTE [FLG.A_DEF],0FFH
	CALL	DEF
	MOV	BYTE [FLG.A_DEF],0
	POP	DWORD [FLG.A_DEF]

	MOV	EDI,ESI
	;MOV	ESI,[NODE_A_DEF]
	POP	ESI
	RET


;
;	>ESI:
;

DEF:
%if 1
	pushad

	pushad
	call	DISP
	db	'def$'
	popad

	mov	ebx,WORD_WORK
	mov	al,[ebx]
	call	PUTCHR_CON
	mov	al,[ebx+1]
	call	PUTCHR_CON
	mov	al,[ebx+2]
	call	PUTCHR_CON

	MOV	AL,':'
	CALL	PUTCHR_CON
	MOV	AL,':'
	CALL	PUTCHR_CON

	MOV	AL,0Ah
	CALL	PUTCHR_CON
	popad
;	ret
%endif


		MOV	BYTE [IS_CLNCLN],0

	MOV	AX,[WORD_WORK]
	CMP	AX,'*'
	JE	DEF_PNT

	CMP	AX,'('
	JE	DEF_PAR

		CMP	BYTE [FLG.AN_DEF],0
		JNE	DEF.AN

	CMP	BYTE [FLG_ARG2],0
	JNE	DEF.ARG2

	CMP	BYTE [FLG.A_DEF],0
	JNE	DEF.05

	MOV	AX,[WORD_WORK]
	CALL	IS_CCHR_F
	JNE	ERR_SYNTAX_DEF

		CALL	IS_CPP
		JNE	DEF.NTCLN

		CMP	BYTE [CHR_WORK],':'
		JNE	DEF.NTCLN
		CALL	GET_NCHR
		PUSH	DWORD [CHR_WORK]
		CALL	UNGETC
		MOV	BYTE [CHR_WORK],':'
		POP	EAX
		CMP	AL,':'
		JNE	DEF.NTCLN

		MOV	BYTE [IS_CLNCLN],0FFH

		MOV	ESI,WORD_WORK
		MOV	EDI,WORD_WORK2
		CALL	STRCPY

		MOV	ESI,WORD_WORK2
		MOV	EDI,WORD_ATAT
		CALL	STRCAT

		CALL	GET_WORD
		CALL	GET_WORD
DEF.DTOR:
		CALL	GET_WORD
		MOV	ESI,WORD_WORK2
		MOV	EDI,WORD_WORK
		CALL	STRCAT
		CMP	WORD [WORD_WORK],'~'
		JE	DEF.DTOR

		MOV	ESI,WORD_WORK2
		MOV	EDI,WORD_WORK
		CALL	STRCPY

DEF.NTCLN:

	;	JMP	DEF.02
DEF.01:
	CMP	BYTE [FLG.ARG],0
	JNE	DEF.025

		CMP	BYTE [FLG.STRUCT],0
		JE	DEF.01.1
		PUSHAD			;$$$
		MOV	AL,'M'+80H
		CALL	ADD_POST
		POPAD
		JMP	DEF.02		;$$$

DEF.01.1:
	CALL	SEARCH_WORD
	JB	DEF.02

		JMP	DEF.02		;### test for bug
	MOV	EAX,[EBX+NODE6]
	OR	EAX,EAX
	;TEST	EAX,1
	JE	DEF.02

	JMP	DEF.03

;	abstract or name

DEF.AN:
	MOV	AX,[WORD_WORK]
	CALL	IS_CCHR_F
	JE	DEF.AN.N

	MOV	AX,WD('_','_')
	CALL	MAKE_WORD1
	MOV	ESI,EBX
	MOV	EDI,EBX
	JMP	DEF.20
DEF.AN.N:
	JMP	DEF.01


;##
DEF.ARG2:
	CALL	SEARCH_WORD
	JB	ERR_SYNTAX_DEF
	JMP	DEF.03

DEF.02:
	CMP	BYTE [FLG.STRUCT],0
	JNE	DEF.02.STRUCT
DEF.025:
	CALL	SET_WORD1
	JMP	DEF.03

DEF.02.STRUCT:
	;CALL	SET_WORD1_MEMBER
		;MOV	AL,'M'+80H
		;CALL	ADD_POST
		CALL	SET_WORD1

DEF.03:
	MOV	[NAME_PNT],EBX
	MOV	ESI,EBX
	MOV	EDI,EBX		;++
	JMP	DEF.10

DEF.05:
	MOV	ESI,[NODE_A_DEF]
;	mov	[name_pnt],ESI	;EBX
	MOV	EDI,EBX		;++	;no need, EDI is set in a_def
	JMP	DEF.20

DEF.10:
	CALL	GET_WORD
DEF.20:
	MOV	AX,[WORD_WORK]
	CMP	AX,'['
	JE	DEF_ARY
	CMP	AX,'('
	;JE	DEF_FNC
	JE	DEF_FNC_CLASS

	;	CMP	AX,':'
	;	JNE	DEF.205
	;	CMP	BYTE [CHR_WORK],':'
	;	JNE	DEF.205
	;	JMP	DEF_CLN
DEF.205:

	RET


;
DEF_CLN:
	CALL	GET_WORD
	CALL	GET_WORD



;
;
;

DEF_PAR:
	CALL	GET_WORD	;skip '('
	CALL	DEF
	MOV	AX,')'
	CALL	SKIP_WORD	;skip ')'

	JMP	DEF.20

;
;	var[] is same as *var
;

DEF_ARY:
	CALL	GET_WORD

	MOV	AX,[WORD_WORK]
	CMP	AX,']'
	MOV	EBX,0FFFFFFFFH	;"[]"
	JE	DEF_ARY.05	;10

	push	edi
	PUSH	ESI
	CALL	EXP_CONST
	MOV	EDX,EBX
	CALL	MAKE_WORD_NO
	POP	ESI
	pop	edi	;name
DEF_ARY.05:
	PUSH	EBX

	MOV	AX,']'
	CALL	SKIP_WORD

	MOV	AX,'['
	CALL	MAKE_WORD1

	POP	EAX

	MOV	[ESI+NODE2],EBX	;node '['
	MOV	[EBX+NODE3],EAX	;[n]

	MOV	ESI,EBX
	JMP	DEF.20

;
;
;
DEF_FNC_CLASS:
	JMP	DEF_FNC

	PUSH	DWORD [IS_CLNCLN]
	CALL	DEF_FNC
	POP	EAX
	OR	EAX,EAX
	JE	DEF_FNC_CLASS.R

	MOV	EBX,[ESI+NODE3]
	CMP	EBX,-1
	JNE	DEF_FNC_CLASS.R

	PUSH	ESI
	MOV	EBX,WORD_THIS
	MOV	ECX,NODESIZE
	CALL	SET_WORD_GLOBAL_BX
	MOV	DWORD [EBX+NODE2],0084H
	POP	ESI
	MOV	[ESI+NODE3],EBX

DEF_FNC_CLASS.R:
	RET


;
;	ESI:node
;	EDI:name
;
;	W1
;	W2
;	W3:node '('
;	W4 K&R
;

DEF_FNC:
	;	mov	edi,esi	;### edi=name!

	PUSH	EDI		;name

	PUSH	DWORD [FLG.STATIC]
	PUSH	DWORD [FLG.EXTRN]

	PUSH	EBP
	MOV	EBP,ESP
	SUB	ESP,4*8

	;MOV	AL,[FLG.K]
	MOV	AL,0
		MOV	DWORD [EBP+W4],0
	MOV	[EBP+W4],AL

	MOV	[DEF_FNC_NAME],EDI

	MOV	EAX,4
	CALL	IS_L
	JNE	DEF_FNC.05
	MOV	EAX,8
DEF_FNC.05:
	MOV	[EBP+W2],EAX	;arg_level	;[ARG_LEVEL],EAX

	CALL	GET_WORD
DEF_FNC.10:
	;	PUSH	ESI
	;	PUSH	EDI
	;	MOV	ESI,WORD_WORK
	;	MOV	EDI,WORD_VOID
	;	CALL	STRCMP
	;	POP	EDI
	;	POP	ESI
	;	JE	DEF_FNC.VOID


	MOV	AX,[WORD_WORK]
	CMP	AX,')'
	JNE	DEF_FNC.ARG
DEF_FNC.15:
	MOV	AX,'('
	CALL	MAKE_WORD1	;'('
	MOV	[ESI+NODE2],EBX

		MOV	[EBP+W3],EBX

			CALL	IS_CPP
			JNE	DEF_FNC.15.NTCPP

			CMP	BYTE [IS_CLNCLN],0
			JE	DEF_FNC.15.NTCPP

			PUSH	EBX

			MOV	EBX,CLASS_NAME
			CALL	SEARCH_WORD_GLOBAL_BX
			JB	ERR_TYPE
			MOV	EBX,[EBX+NODE2]
			CMP	EBX,100H
			JB	ERR_TYPE
			MOV	EAX,[EBX+NODE1]
			MOV	AX,[EAX]
			CMP	AX,WD('t','y')+8080H
			JNE	ERR_TYPE
			MOV	EBX,[EBX+NODE2]

			PUSH	EBX
			MOV	EBX,WORD_THIS
			MOV	ECX,NODESIZE
			CALL	SET_WORD_GLOBAL_BX

			MOV	DWORD [EBX+NODE7],8	;level

			PUSH	EBX
			MOV	AX,'*'
			CALL	MAKE_WORD1
			POP	EDX
			MOV	[EDX+NODE2],EBX

			POP	EAX
			MOV	[EBX+NODE2],EAX

			POP	EBX
			MOV	[EBX+NODE3],EDX
DEF_FNC.15.NTCPP:

	JMP	DEF_FNC.R

DEF_FNC.VOID:
	CALL	GET_WORD	;skip 'void'
	MOV	AX,[WORD_WORK]
	CMP	AX,')'
	JNE	ERR_SYNTAX_DEF

	JMP	DEF_FNC.15


DEF_FNC.ARG:
	MOV	AX,'('
	CALL	MAKE_WORD1

	MOV	[ESI+NODE2],EBX
		MOV	[EBP+W3],EBX
	MOV	[EBP+W1],EBX	;node '('

			CALL	IS_CPP
			JNE	DEF_FNC.NTCPP2
			CMP	BYTE [IS_CLNCLN],0
			JE	DEF_FNC.NTCPP2

			PUSH	EBX

			MOV	EBX,CLASS_NAME
			CALL	SEARCH_WORD_GLOBAL_BX
			JB	ERR_TYPE
			MOV	EBX,[EBX+NODE2]
			CMP	EBX,100H
			JB	ERR_TYPE
			MOV	EAX,[EBX+NODE1]
			MOV	AX,[EAX]
			CMP	AX,WD('t','y')+8080H
			JNE	ERR_TYPE
			MOV	EBX,[EBX+NODE2]

			PUSH	EBX
			MOV	EBX,WORD_THIS
			MOV	ECX,NODESIZE
			CALL	SET_WORD_GLOBAL_BX

			MOV	DWORD [EBX+NODE7],8	;level

			PUSH	EBX
			MOV	AX,'*'
			CALL	MAKE_WORD1
			POP	EDX
			MOV	[EDX+NODE2],EBX

			POP	EAX
			MOV	[EBX+NODE2],EAX

			POP	EBX
			MOV	[EBX+NODE3],EDX
		

DEF_FNC.NTCPP2:

;loop
DEF_FNC.ARG.10:

	CALL	IS_TYPENAME
	;JNE	ERR_SYNTAX
	JE	DEF_FNC.ARG.11

	CALL	IS_KR
	JE	DEF_FNC.ARG.INT.KR

	;MOV	BYTE [EBP+W4],0FFH
	JMP	DEF_FNC.ARG.INT.KR

DEF_FNC.ARG.11:
	CALL	TYPENAME
	MOV	EAX,EBX

	JMP	DEF_FNC.ARG.INT

WORD_ELLIPSIS:
	DB	'...',0

DEF_FNC.ARG.INT.KR:
	MOV	AX,[WORD_WORK]
	CALL	IS_CCHR_F
	JNE	ERR_SYNTAX_DEF

	CALL	SET_WORD1
	MOV	ESI,EBX

		INC	BYTE [EBP+W4]
		OR	DWORD [ESI+NODE9],10H	;k&r type arg

	CALL	GET_WORD
	MOV	EAX,[TYPE_INT]
	JMP	DEF_FNC.ARG.INT.20

;	int func ( int

DEF_FNC.ARG.INT:

	PUSH	EAX
	PUSH	DWORD [DEF_FNC_NAME]
	PUSH	DWORD [NAME_PNT]

		PUSH	DWORD [FLG.AN_DEF]
	PUSH	DWORD [FLG.ARG]
	MOV	BYTE [FLG.ARG],0FFH
		MOV	BYTE [FLG.AN_DEF],0FFH
	CALL	DEF
	POP	DWORD [FLG.ARG]
		POP	DWORD [FLG.AN_DEF]
	MOV	EBX,EDI		;name_pnt

	POP	DWORD [NAME_PNT]
	POP	DWORD [DEF_FNC_NAME]
	POP	EAX

DEF_FNC.ARG.INT.20:
;	EAX	type
;	EBX	name node

	MOV	EDI,[EBP+W1]

	MOV	[ESI+NODE2],EAX	;type
	MOV	[EDI+NODE3],EBX	;link

		PUSHAD
		MOV	ESI,EBX
		CALL	PARTOPNT
		POPAD

		MOV	EAX,[EBX+NODE2]
		CMP	EAX,100H
		JB	DEF_FNC.ARG.INT.22
		MOV	EAX,[EAX+NODE1]
		MOV	AX,[EAX]
		CMP	AX,'{'
		JNE	DEF_FNC.ARG.INT.22
		JMP	DEF_FNC.ARG.INT.23
DEF_FNC.ARG.INT.22:

	MOV	EDX,4
	CALL	IS_L
	JE	DEF_FNC.ARG.INT.05
DEF_FNC.ARG.INT.23:
	PUSH	ESI
	PUSH	EDI
	PUSH	EBX
	MOV	ESI,EBX
		MOV	ESI,[ESI+NODE2]	;#####
	CALL	SIZEOF
	;	CMP	EDX,4
	;	JNB	DEF_FNC.ARG.INT.23@
	;	MOV	EDX,4
DEF_FNC.ARG.INT.23@:

	POP	EBX
	POP	EDI
	POP	ESI
DEF_FNC.ARG.INT.05:

	MOV	EAX,[EBP+W2]	;arg_level	;[ARG_LEVEL]
	MOV	[EBX+NODE7],EAX
	ADD	[EBP+W2],EDX	;arg_level	;[ARG_LEVEL],EDX	;2

DEF_FNC.ARG.INT.05#:
	MOV	AX,[WORD_WORK]
	CMP	AX,','
	JE	DEF_FNC_ARG.CM

	CMP	AX,')'
	JNE	ERR_SYNTAX_DEF

DEF_FNC.R:
		MOV	ESI,[EBP+W3]

			MOV	EAX,[EBP+W2]
			MOV	[NEXT_ARG],EAX

		MOV	BL,[EBP+W4]
	ADD	ESP,4*8
	POP	EBP

	POP	DWORD [FLG.EXTRN]
	POP	DWORD [FLG.STATIC]

	POP	EDI		;func name
	;	MOV	ESI,[EDI+NODE2]	;node '('

	;	PUSHAD
	;	CALL	DISP
	;	DB	'&$'
	;	POPAD

	CALL	IS_KR
	JE	DEF_FNC.R2

	;CMP	BL,0FFH
	;JE	DEF_FNC.R2
		OR	BL,BL
		JNE	DEF_FNC.R2

	JMP	DEF.10

DEF_FNC_ARG.CM:
	MOV	[EBP+W1],EBX

	CALL	GET_WORD	;skip ','

		MOV	AL,[WORD_WORK]
		CMP	AL,'.'
		JE	DEF_FNC.ELLIPSIS

	JMP	DEF_FNC.ARG.10

DEF_FNC.ELLIPSIS:
	CALL	GET_WORD
	MOV	AL,[WORD_WORK]
	CMP	AL,'.'
	JNE	ERR_SYNTAX_DEF
	CALL	GET_WORD
	MOV	AL,[WORD_WORK]
	CMP	AL,'.'
	JNE	ERR_SYNTAX_DEF

	CALL	GET_WORD
	JMP	DEF_FNC.ARG.INT.05#

;
DEF_FNC.R2:
	CALL	GET_WORD	;skip ')'

	PUSH	DWORD [KR_ARG_CNT]
	MOV	[KR_ARG_CNT],BL
	PUSHAD
DEF_FNC.R2.10:
	CALL	IS_TYPENAME
	JNE	DEF_FNC.R2.R
	CALL	TYPENAME
	MOV	EAX,EBX

DEF_FNC.R2.20:
	PUSH	EAX
	PUSH	DWORD [DEF_FNC_NAME]
	PUSH	DWORD [NAME_PNT]
	PUSH	DWORD [FLG.ARG]
	PUSH	DWORD [FLG_ARG2]

		;PUSH	DWORD [FLG.AN_DEF]
	MOV	BYTE [FLG.ARG],0
	MOV	BYTE [FLG_ARG2],0FFH
		;MOV	BYTE [FLG.AN_DEF],0FFH
	CALL	DEF
	MOV	EBX,EDI		;name_pnt

		TEST	DWORD [EBX+NODE9],10H	;k&r type arg
		JE	ERR_ARG
		XOR	DWORD [EBX+NODE9],10H
		DEC	BYTE [KR_ARG_CNT]

	;MOV	EDX,[NAME_PNT]

		;POP	DWORD [FLG.AN_DEF]
	POP	DWORD [FLG_ARG2]
	POP	DWORD [FLG.ARG]
	POP	DWORD [NAME_PNT]
	POP	DWORD [DEF_FNC_NAME]
	POP	EAX

	MOV	[ESI+NODE2],EAX

		PUSHAD
		MOV	ESI,EBX
		CALL	PARTOPNT
		POPAD

	;	PUSHAD
	;	CALL	DISP
	;	DB	'%$'
	;	POPAD

	MOV	EBX,EAX

	MOV	AX,[WORD_WORK]
	CMP	AX,';'
	JE	DEF_FNC.R2.50
	CMP	AL,','
	JE	DEF_FNC.R2.40

	JMP	DEF_FNC.R2.90

DEF_FNC.R2.40:
	CALL	GET_WORD	;skip ','
	MOV	EAX,EBX
	JMP	DEF_FNC.R2.20

DEF_FNC.R2.50:
	CALL	GET_WORD	;skip ';'

	CALL	ADJ_LV

	JMP	DEF_FNC.R2.10


DEF_FNC.R2.90:


DEF_FNC.R2.R:
	CMP	BYTE [KR_ARG_CNT],0
	JNE	ERR_ARG

	POPAD
	POP	DWORD [KR_ARG_CNT]
	JMP	DEF.20



;
ADJ_LV:
	MOV	EDX,8

	MOV	ESI,[DEF_FNC_NAME]
	MOV	ESI,[ESI+NODE2]	;node '('
ADJ_LV.10:
	MOV	ESI,[ESI+NODE3]	;first arg
	OR	ESI,ESI
	JE	ADJ_LV.R

	MOV	[ESI+NODE7],EDX

	PUSH	EDX
	PUSH	ESI
	MOV	ESI,[ESI+NODE2]
		CMP	ESI,100H
		JB	ADJ_LV.20
		MOV	EAX,[ESI+NODE1]
		MOV	AX,[EAX]
		CMP	AX,'{'
		JNE	ADJ_LV.20

	CALL	SIZEOF
	;	CMP	EDX,4
	;	JNB	ADJ_LV.21
	;	MOV	EDX,4

	JMP	ADJ_LV.21
ADJ_LV.20:
	MOV	EDX,4
ADJ_LV.21:
	MOV	EAX,EDX
	POP	ESI
	POP	EDX
	ADD	EDX,EAX
	JMP	ADJ_LV.10

ADJ_LV.R:
	MOV	[NEXT_ARG],EDX
	RET


;
;DEF_FNC.ARG.KR:
	CALL	DEF
	MOV	EBX,EDI

	MOV	EDI,[EBP+W1]

	MOV	[ESI+NODE2],EAX	;type
	MOV	[EDI+NODE3],EBX	;link

	MOV	EAX,[EBP+W2]
	MOV	[EBX+NODE7],EAX
	ADD	DWORD [EBP+W2],4

	MOV	AX,[WORD_WORK]
	CMP	AX,','
;	JE	DEF_FNC.ARG.KR.CM
	CMP	AL,')'
	JNE	ERR_SYNTAX_DEF
	JMP	DEF_FNC.R


;DEF_FNC.ARG.KR.CM:
	MOV	[EBP+W1],EBX

	CALL	GET_WORD	;skip ','
	JMP	DEF_FNC.ARG.10



;	param[] -> *param
;	ESI	name node
PARTOPNT:
	CMP	ESI,100H
	JB	PARTOPNT.R

	MOV	EBX,[ESI+NODE2]
	CMP	EBX,100H
	JB	PARTOPNT.R

	MOV	EAX,[EBX+NODE1]
	CMP	WORD [EAX],'['
	JNE	PARTOPNT.R

	MOV	EDX,[EBX+NODE2]
	MOV	AX,'*'
	CALL	MAKE_WORD1
	MOV	[EBX+NODE2],EDX
	MOV	[ESI+NODE2],EBX

PARTOPNT.R:
	RET

;
;	>SI:->'*'
;

DEF_PNT:
	MOV	AX,'*'
	CALL	MAKE_WORD1
	MOV	ESI,EBX		;ESI:node '*'

	PUSH	ESI
	CALL	GET_WORD
	CALL	DEF
	MOV	EBX,ESI
	POP	ESI

	MOV	[EBX+NODE2],ESI

	RET
